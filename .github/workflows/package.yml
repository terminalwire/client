name: Package

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    env:
      # Set the version of ruby-install to use
      RUBY_INSTALL_VERSION: 0.9.4

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, arm64]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # Install dependencies for Linux
      - name: Install dependencies (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl \
            libssl-dev libreadline-dev zlib1g-dev

      # Install dependencies for macOS
      - name: Install dependencies (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: |
          brew update
          brew install openssl readline zlib

      # Install ruby-install from source on both OS's
      - name: Install ruby-install from source
        run: |
          curl -LO https://github.com/postmodern/ruby-install/archive/refs/tags/v$RUBY_INSTALL_VERSION.tar.gz
          tar -xzf v$RUBY_INSTALL_VERSION.tar.gz
          cd ruby-install-$RUBY_INSTALL_VERSION

          make
          sudo make install
          ruby-install --version

      # Run your build script
      - name: Run build script
        run: |
          bash builder/build.sh

      # Upload the final tar.gz artifact for each OS/arch
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}-${{ matrix.arch }}
          path: build/build.tar.gz

      # Upload artifacts to S3-compatible bucket
      - name: Upload artifacts to Tigris
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          # Use the GitHub Actions run ID as the build ID
          BUILD_ID=${{ github.run_id }}
          TARGET_DIR="builds/$BUILD_ID"

          # Upload to S3-compatible bucket
          aws s3 cp build/build.tar.gz s3://$S3_BUCKET_NAME/$TARGET_DIR/build-${{ matrix.os }}-${{ matrix.arch }}.tar.gz --acl public-read
